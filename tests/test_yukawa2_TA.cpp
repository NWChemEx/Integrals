#include "test_common_TA.hpp"
#include <integrals/integralsmm.hpp>
#include <property_types/ao_integrals/yukawa.hpp>

using matrix_t = TA::detail::matrix_il<double>;

static matrix_t corr{
  {
    0.7174258302062281,
    1.134104974702415,
    0.0000000000000000,
    0.0000000000000000,
    0.0000000000000000,
    0.3879048898831669,
    0.387904889883167,
  },
  {
    1.134104974702414,
    6.113309677837837,
    0.0000000000000000,
    0.0000000000000000,
    0.0000000000000000,
    3.420278138648697,
    3.420278138648697,
  },
  {
    0.0000000000000000,
    0.0000000000000000,
    3.251826432143477,
    0.0000000000000000,
    0.0000000000000000,
    1.278509993399123,
    1.278509993399123,
  },
  {
    0.0000000000000000,
    0.0000000000000000,
    0.0000000000000000,
    3.251826432143476,
    0.0000000000000000,
    0.0000000000000000,
    0.0000000000000000,
  },
  {
    0.0000000000000000,
    0.0000000000000000,
    0.0000000000000000,
    0.0000000000000000,
    3.251826432143477,
    1.636408970923164,
    -1.636408970923164,
  },
  {
    0.387904889883167,
    3.420278138648697,
    1.278509993399123,
    0.0000000000000000,
    1.636408970923164,
    6.808586200586897,
    2.066996470412582,
  },
  {
    0.387904889883167,
    3.420278138648697,
    1.278509993399123,
    0.0000000000000000,
    -1.636408970923164,
    2.066996470412582,
    6.808586200586897,
  },
};

TEST_CASE("Yukawa2C") {
    using integral_type = property_types::Yukawa2CIntegral<double>;

    sde::ModuleManager mm;
    integrals::load_modules(mm);
    auto [molecule, bs] = make_molecule();
    auto stg_exponent   = 1.0;
    mm.at("Yukawa2").change_input("Tile size", std::vector<std::size_t>{6});
    auto [X] = mm.at("Yukawa2").run_as<integral_type>(bs, bs, std::size_t{0},
                                                      stg_exponent);

    REQUIRE(libchemist::allclose(X, TensorType(X.world(), X.trange(), corr)));
}
