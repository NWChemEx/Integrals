#include "test_common_TA.hpp"
#include <integrals/integralsmm.hpp>
#include <property_types/ao_integrals/nuclear.hpp>

static BlockTensor corr{
        {{0, 0,}, {-61.5805952694322, } },
        {{0, 1,}, {-7.410821856331163, } },
        {{0, 2,}, {-0.0144738837457361, 0.0000000000000000,  0.0000000000000000, } },
        {{0, 3,}, {-1.231685572142488, } },
        {{0, 4,}, {-1.231685572142488, } },
        {{1, 0,}, {-7.410821856331163, } },
        {{1, 1,}, {-10.00907114207003, } },
        {{1, 2,}, {-0.1768908347336431, 0.0000000000000000,  0.0000000000000000, } },
        {{1, 3,}, {-2.977226853578134, } },
        {{1, 4,}, {-2.977226853578134, } },
        {{2, 0,}, {-0.01447388374573611, 0.0000000000000000, 0.0000000000000000, } },
        {{2, 1,}, {-0.1768908347336431, 0.0000000000000000, 0.0000000000000000, } },
        {{2, 2,}, {-9.944043341698766,  0.0000000000000000,  0.0000000000000000,
                   0.0000000000000000,  -9.875875995090944,  0.0000000000000000,
                   0.0000000000000000,  0.0000000000000000,  -9.987549935088563, } },
        {{2, 3,}, {-1.471793338712961, 0.0000000000000000, -1.822236913476131, } },
        {{2, 4,}, {-1.471793338712961, 0.0000000000000000, 1.822236913476131, } },
        {{3, 0,}, {-1.231685572142488, } },
        {{3, 1,}, {-2.977226853578134, } },
        {{3, 2,}, {-1.471793338712961,  0.0000000000000000, -1.822236913476131, } },
        {{3, 3,}, {-5.300203252295022, } },
        {{3, 4,}, {-1.067171080472437, } },
        {{4, 0,}, {-1.231685572142488, } },
        {{4, 1,}, {-2.977226853578134, } },
        {{4, 2,}, {-1.471793338712961, 0.0000000000000000,  1.82223691347613, } },
        {{4, 3,}, {-1.067171080472437, } },
        {{4, 4,}, {-5.30020325229502, } },
};

TEST_CASE("Nuclear") {
    using integral_type = property_types::NuclearIntegral<double>;

    sde::ModuleManager mm;
    integrals::load_modules(mm);
    auto [molecule, bs] = make_molecule();
    mm.at("Nuclear").change_input("Tile size", std::vector<std::size_t>{1, 1});
    auto [V] = mm.at("Nuclear").run_as<integral_type>(bs, bs, molecule, std::size_t{0});

    compare_integrals(V, corr);
}
