#include "test_common_TA.hpp"
#include <integrals/integralsmm.hpp>
#include <property_types/ao_integrals/kinetic.hpp>

static BlockTensor corr{
        {{0, 0,}, {29.00319994553958, } },
        {{0, 1,}, {-0.1680109393164922, } },
        {{0, 2,}, {0.0000000000000000, 0.0000000000000000,  0.0000000000000000, } },
        {{0, 3,}, {-0.008416385185447427, } },
        {{0, 4,}, {-0.008416385185447427, } },
        {{1, 0,}, {-0.1680109393164923, } },
        {{1, 1,}, {0.8081279549303477, } },
        {{1, 2,}, {0.0000000000000000, 0.0000000000000000,  0.0000000000000000, } },
        {{1, 3,}, {0.07051733851899882, } },
        {{1, 4,}, {0.07051733851899882, } },
        {{2, 0,}, {0.0000000000000000, 0.0000000000000000, 0.0000000000000000, } },
        {{2, 1,}, {0.0000000000000000, 0.0000000000000000, 0.0000000000000000, } },
        {{2, 2,}, {2.528731198194765,  0.0000000000000000,  0.0000000000000000,
                          0.0000000000000000,  2.528731198194765,  0.0000000000000000,
                          0.0000000000000000,  0.0000000000000000,  2.528731198194765, } },
        {{2, 3,}, {0.1149203802569082, 0.0000000000000000, 0.1470905524127557, } },
        {{2, 4,}, {0.1149203802569082, 0.0000000000000000, -0.1470905524127557, } },
        {{3, 0,}, {-0.008416385185447427, } },
        {{3, 1,}, {0.07051733851899882, } },
        {{3, 2,}, {0.1149203802569082,  0.0000000000000000, 0.1470905524127557, } },
        {{3, 3,}, {0.760031883566609, } },
        {{3, 4,}, {-0.003979736727037247, } },
        {{4, 0,}, {-0.008416385185447427, } },
        {{4, 1,}, {0.07051733851899882, } },
        {{4, 2,}, {0.1149203802569082, 0.0000000000000000,  -0.1470905524127557, } },
        {{4, 3,}, {-0.003979736727037247, } },
        {{4, 4,}, {0.760031883566609, } },
};

TEST_CASE("Kinetic") {
    using integral_type = property_types::KineticIntegral<double>;

    sde::ModuleManager mm;
    integrals::load_modules(mm);
    auto [molecule, bs] = make_molecule();
    mm.at("Kinetic").change_input("Tile size", std::vector<std::size_t>{1, 1, 3});
    auto [T] = mm.at("Kinetic").run_as<integral_type>(bs, bs, std::size_t{0});

    compare_integrals(T, corr);
}
