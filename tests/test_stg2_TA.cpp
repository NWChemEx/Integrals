#include "test_common_TA.hpp"
#include <integrals/integralsmm.hpp>
#include <property_types/ao_integrals/stg.hpp>

static BlockTensor corr{
        {{0, 0,}, {0.2537942162587338, 1.046215785805689, 0.000000000000000, 0.000000000000000,
                   0.000000000000000, 1.046215785805689, 7.01044084560758, 0.000000000000000,
                   0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000,
                   2.314313940319281, 0.000000000000000, 0.000000000000000, 0.000000000000000,
                   0.000000000000000, 0.000000000000000, 2.31431394031928, 0.000000000000000,
                   0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 2.314313940319281, } },
        {{0, 1,}, {0.5645176270609247, 0.5645176270609247, 4.944422029164063, 4.944422029164063,
                   1.342604331704185, 1.342604331704185, 0.000000000000000, 0.000000000000000,
                   1.718445521852997, -1.718445521852997, } },
        {{1, 0,}, {0.5645176270609245, 4.944422029164063, 1.342604331704185, 0.000000000000000, 1.718445521852996,
                   0.5645176270609245, 4.944422029164063, 1.342604331704185,
                   0.000000000000000, -1.718445521852996, } },
        {{1, 1,}, {8.672980870957266, 3.554826241135164, 3.554826241135164, 8.672980870957266, } },
};

TEST_CASE("STG2C") {
    using integral_type = property_types::STG2CIntegral<double>;

    sde::ModuleManager mm;
    integrals::load_modules(mm);
    auto [molecule, bs] = make_molecule();
    auto stg_exponent = 1.0;
    mm.at("STG2").change_input("Tile size", std::vector<std::size_t>{3});
    auto [I] = mm.at("STG2").run_as<integral_type>(bs, bs, std::size_t{0}, stg_exponent);

    compare_integrals(I, corr);
}