#include <Integrals/IntegralsMM.hpp>
#include <LibChemist/Defaults/PropertyTypes.hpp>
#include "TestCommon.hpp"

using namespace Integrals::Libint;

//Computes the nuclear-electron energy integrals for water in STO-3G
static BlockTensor corr {
    {{0 , 0}, {-61.5805952694322016,}},
    {{0 , 1}, {-7.4108218563311627,}},
    {{0 , 2}, {-0.0144738837457361,0.0000000000000000,0.0000000000000000,}},
    {{0 , 3}, {-1.2316855721424882,}},
    {{0 , 4}, {-1.2316855721424882,}},
    {{1 , 0}, {-7.4108218563311627,}},
    {{1 , 1}, {-10.0090711420700309,}},
    {{1 , 2}, {-0.1768908347336432,0.0000000000000000,0.0000000000000000,}},
    {{1 , 3}, {-2.9772268535781348,}},
    {{1 , 4}, {-2.9772268535781343,}},
    {{2 , 0}, {-0.0144738837457361,0.0000000000000000,0.0000000000000000,}},
    {{2 , 1}, {-0.1768908347336432,0.0000000000000000,0.0000000000000000,}},
    {{2 , 2}, {-9.9440433416987624,0.0000000000000000,0.0000000000000000,
               0.0000000000000000,-9.8758759950909436,0.0000000000000000,
               0.0000000000000000,0.0000000000000000,-9.9875499350885555,}},
    {{2 , 3}, {-1.4717933387129607,0.0000000000000000,-1.8222369134761305,}},
    {{2 , 4}, {-1.4717933387129607,0.0000000000000000,1.8222369134761305,}},
    {{3 , 0}, {-1.2316855721424882,}},
    {{3 , 1}, {-2.9772268535781339,}},
    {{3 , 2}, {-1.4717933387129609,0.0000000000000000,-1.8222369134761305,}},
    {{3 , 3}, {-5.3002032522950211,}},
    {{3 , 4}, {-1.0671710804724368,}},
    {{4 , 0}, {-1.2316855721424882,}},
    {{4 , 1}, {-2.9772268535781343,}},
    {{4 , 2}, {-1.4717933387129609,0.0000000000000000,1.8222369134761305,}},
    {{4 , 3}, {-1.0671710804724368,}},
    {{4 , 4}, {-5.3002032522950193,}}};

TEST_CASE("Testing Libint Nuclear-Electron Attraction Integrals"){
    using integral_type = LibChemist::AOIntegral<2, double>;
    SDE::ModuleManager mm;
    load_modules(mm);
    auto [molecule, bs] = make_molecule();
    std::array<LibChemist::AOBasisSet, 2> bases = {bs, bs};
    auto [Ints] = mm.at("Nuclear").run_as<integral_type>(molecule, bases, std::size_t{0});
    compare_integrals(Ints, corr);
}
